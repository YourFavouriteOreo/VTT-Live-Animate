(()=>{"use strict";class e{static get MOD_NAME(){return this._MOD_NAME}static init(e){this._MOD_NAME=e}static register(t,a){game.settings.register(e._MOD_NAME,t,a)}static get(t){return game.settings.get(e._MOD_NAME,t)}static set(t,a){return i=this,n=void 0,s=function*(){return yield game.settings.set(e._MOD_NAME,t,a)},new((r=void 0)||(r=Promise))((function(e,t){function a(e){try{u(s.next(e))}catch(e){t(e)}}function o(e){try{u(s.throw(e))}catch(e){t(e)}}function u(t){var i;t.done?e(t.value):(i=t.value,i instanceof r?i:new r((function(e){e(i)}))).then(a,o)}u((s=s.apply(i,n||[])).next())}));var i,n,r,s}static default(t){return game.settings.settings.get(`${e._MOD_NAME}.${t}`).default}static typeOf(){return Object}}function t(e){console.error(e.join(",\n")+"\n"+(new Error).stack)}class a{static get isShim(){return!1}static _metaKey(e){return(e.altKey?1:0)|(e.ctrlKey?2:0)|(e.shiftKey?4:0)}static _isMeta(e){return"Shift"===e.key||"Ctrl"===e.key||"Alt"===e.key}static _handleKeyDown(e){if(this._isMeta(e))return;if(document.activeElement instanceof HTMLInputElement)return;if(document.activeElement instanceof HTMLTextAreaElement)return;if("true"===document.activeElement.getAttribute("contenteditable"))return;const t=this._metaKey(e),a=this._handlers.get(t);if(!a||0==a.size)return;const i=a.get(e.code);if(i&&0!=i.length){e.preventDefault(),this._handled.add(e.code);for(let t of i)t.onKeyDown&&(e.repeat&&!t.repeat||t.onKeyDown(t,e,e.repeat))}}static _handleKeyUp(e){if(!this._handled.has(e.code))return;this._handled.delete(e.code);const t=this._metaKey(e),a=this._handlers.get(t);if(!a||0==a.size)return;const i=a.get(e.code);if(i&&0!=i.length){e.preventDefault(),this._handled.add(e.code);for(let t of i)t.onKeyUp&&t.onKeyUp(t,e)}}static _init(){window.addEventListener("keydown",this._handleKeyDown.bind(this)),window.addEventListener("keyup",this._handleKeyUp.bind(this)),this._settings.set(a.GENERAL,{name:a.GENERAL,label:"DF_HOTKEYS.GeneralGroup_Label",description:"",items:[]})}static _getOrDefault(e,t,a){return e.has(t)||e.set(t,a()),e.get(t)}static showConfig(e,t){return a=this,i=void 0,r=function*(){throw new Error("The Shim does not contain the HotkeysConfig application. Please only use this function when DF Hotkeys is activated.")},new((n=void 0)||(n=Promise))((function(e,t){function s(e){try{u(r.next(e))}catch(e){t(e)}}function o(e){try{u(r.throw(e))}catch(e){t(e)}}function u(t){var a;t.done?e(t.value):(a=t.value,a instanceof n?a:new n((function(e){e(a)}))).then(s,o)}u((r=r.apply(a,i||[])).next())}));var a,i,n,r}static createConfig(e,t){throw new Error("The Shim does not contain the HotkeysConfig application. Please only use this function when DF Hotkeys is activated.")}static registerShortcut(i,n=!0){const r=[];if("string"==typeof i.name||i.name instanceof String||r.push("Hotkeys.registerShortcut(): config.name must be a string!"),i.name.includes("::")&&r.push('Hotkeys.registerShortcut(): config.name cannot contain "::"'),"string"==typeof i.label||i.label instanceof String||r.push("Hotkeys.registerShortcut(): config.label must be a string!"),void 0===i.group||null===i.group||"string"==typeof i.group||i.group instanceof String||r.push("Hotkeys.registerShortcut(): config.group must be null, undefined, or a string!"),!i.get||i.get instanceof Function||r.push("Hotkeys.registerShortcut(): config.get must be a Function!"),!i.set||i.set instanceof Function||r.push("Hotkeys.registerShortcut(): config.set must be a Function!"),!i.set!=!i.get&&r.push("Hotkeys.registerShortcut(): If either `get` or `set` is defined, both must be defined!"),i.default instanceof Function||void 0!==i.default.key&&void 0!==i.default.alt&&void 0!==i.default.ctrl&&void 0!==i.default.shift||r.push("Hotkeys.registerShortcut(): config.default must be either a Function or a KeyMap!"),!i.handle||i.handle instanceof Function||r.push("Hotkeys.registerShortcut(): DEPRECATED! config.handle must be a Function!"),!i.onKeyDown||i.onKeyDown instanceof Function||r.push("Hotkeys.registerShortcut(): config.onKeyDown must be a Function!"),!i.onKeyUp||i.onKeyUp instanceof Function||r.push("Hotkeys.registerShortcut(): config.onKeyUp must be a Function!"),this._settingsNames.has(i.name)&&r.push(`Hotkeys.registerShortcut(): '${i.name}' hotkey has already been registered!`),r.length>0){if(n)throw Error(r.join(",\n"));return t(r),!1}if(i.handle&&console.warn(`Hotkeys: The configuration "${i.name}" is using the deprecated 'handle()' function. Please use 'onKeyDown' and/or 'onKeyUp' instead.\nThis function will still work for now, but will be removed in a later update.`),i.get||(e.register("KEYMAP."+i.name,{scope:"world",config:!1,type:e.typeOf(),default:i.default instanceof Function?i.default():i.default}),i.get=()=>e.get("KEYMAP."+i.name),i.set=t=>e.set("KEYMAP."+i.name,t)),this._settingsNames.add(i.name),i.group){if(!this._settings.has(i.group)){if(n)throw Error(`Hotkeys.registerShortcut(): '${i.group}' group does not exist. Please make sure you call Hotkeys.registerGroup() before adding hotkeys for a custom group.`);return!1}}else i.group=a.GENERAL;this._settings.get(i.group).items.push(i);const s=i.get(),o=(s.alt?1:0)|(s.ctrl?2:0)|(s.shift?4:0),u=this._getOrDefault(this._handlers,o,(()=>new Map));return this._getOrDefault(u,s.key,(()=>[])).push(i),!0}static deregisterShortcut(e){var t=!1;for(let a of this._settings.values()){const i=a.items.findIndex((t=>t.name===e));if(!(i<0)){a.items.splice(i,1),t=!0;break}}if(!t)return!1;for(let t of this._handlers.values())for(let a of t.values()){const t=a.findIndex((t=>t.name===e));t<0||a.splice(t,1)}return!0}static registerGroup(e,a=!0){var i;const n=[];if("string"==typeof e.name||e.name instanceof String||n.push("Hotkeys.registerGroup(): group.name must be a string!"),e.name.includes("::")&&n.push('Hotkeys.registerGroup(): group.name cannot contain "::"'),"string"==typeof e.label||e.label instanceof String||n.push("Hotkeys.registerGroup(): group.label must be a string!"),void 0===e.description||null===e.description||"string"==typeof e.description||e.description instanceof String||n.push("Hotkeys.registerGroup(): group.description must be null, undefined, or a string!"),this._settings.has(e.name)&&n.push(`Hotkeys.registerGroup(): '${e.name}' group has already been registered!`),n.length>0){if(a)throw Error(n.join(",\n"));return t(n),!1}return this._settings.set(e.name,{name:e.name,label:e.label,description:null!==(i=e.description)&&void 0!==i?i:"",items:[]}),!0}}let i;a.GENERAL="general",a._handlers=new Map,a._handled=new Set,a._settings=new Map,a._settingsNames=new Set,a.keys=new class{constructor(){this._data={KeyA:{key:"KeyA",label:"DF_HOTKEYS.KeyA"},KeyB:{key:"KeyB",label:"DF_HOTKEYS.KeyB"},KeyC:{key:"KeyC",label:"DF_HOTKEYS.KeyC"},KeyD:{key:"KeyD",label:"DF_HOTKEYS.KeyD"},KeyE:{key:"KeyE",label:"DF_HOTKEYS.KeyE"},KeyF:{key:"KeyF",label:"DF_HOTKEYS.KeyF"},KeyG:{key:"KeyG",label:"DF_HOTKEYS.KeyG"},KeyH:{key:"KeyH",label:"DF_HOTKEYS.KeyH"},KeyI:{key:"KeyI",label:"DF_HOTKEYS.KeyI"},KeyJ:{key:"KeyJ",label:"DF_HOTKEYS.KeyJ"},KeyK:{key:"KeyK",label:"DF_HOTKEYS.KeyK"},KeyL:{key:"KeyL",label:"DF_HOTKEYS.KeyL"},KeyM:{key:"KeyM",label:"DF_HOTKEYS.KeyM"},KeyN:{key:"KeyN",label:"DF_HOTKEYS.KeyN"},KeyO:{key:"KeyO",label:"DF_HOTKEYS.KeyO"},KeyP:{key:"KeyP",label:"DF_HOTKEYS.KeyP"},KeyQ:{key:"KeyQ",label:"DF_HOTKEYS.KeyQ"},KeyR:{key:"KeyR",label:"DF_HOTKEYS.KeyR"},KeyS:{key:"KeyS",label:"DF_HOTKEYS.KeyS"},KeyT:{key:"KeyT",label:"DF_HOTKEYS.KeyT"},KeyU:{key:"KeyU",label:"DF_HOTKEYS.KeyU"},KeyV:{key:"KeyV",label:"DF_HOTKEYS.KeyV"},KeyW:{key:"KeyW",label:"DF_HOTKEYS.KeyW"},KeyX:{key:"KeyX",label:"DF_HOTKEYS.KeyX"},KeyY:{key:"KeyY",label:"DF_HOTKEYS.KeyY"},KeyZ:{key:"KeyZ",label:"DF_HOTKEYS.KeyZ"},Digit1:{key:"Digit1",label:"DF_HOTKEYS.Digit1"},Digit2:{key:"Digit2",label:"DF_HOTKEYS.Digit2"},Digit3:{key:"Digit3",label:"DF_HOTKEYS.Digit3"},Digit4:{key:"Digit4",label:"DF_HOTKEYS.Digit4"},Digit5:{key:"Digit5",label:"DF_HOTKEYS.Digit5"},Digit6:{key:"Digit6",label:"DF_HOTKEYS.Digit6"},Digit7:{key:"Digit7",label:"DF_HOTKEYS.Digit7"},Digit8:{key:"Digit8",label:"DF_HOTKEYS.Digit8"},Digit9:{key:"Digit9",label:"DF_HOTKEYS.Digit9"},Digit0:{key:"Digit0",label:"DF_HOTKEYS.Digit0"},Numpad1:{key:"Numpad1",label:"DF_HOTKEYS.Numpad1"},Numpad2:{key:"Numpad2",label:"DF_HOTKEYS.Numpad2"},Numpad3:{key:"Numpad3",label:"DF_HOTKEYS.Numpad3"},Numpad4:{key:"Numpad4",label:"DF_HOTKEYS.Numpad4"},Numpad5:{key:"Numpad5",label:"DF_HOTKEYS.Numpad5"},Numpad6:{key:"Numpad6",label:"DF_HOTKEYS.Numpad6"},Numpad7:{key:"Numpad7",label:"DF_HOTKEYS.Numpad7"},Numpad8:{key:"Numpad8",label:"DF_HOTKEYS.Numpad8"},Numpad9:{key:"Numpad9",label:"DF_HOTKEYS.Numpad9"},Numpad0:{key:"Numpad0",label:"DF_HOTKEYS.Numpad0"},NumpadDecimal:{key:"NumpadDecimal",label:"DF_HOTKEYS.NumpadDecimal"},NumpadDivide:{key:"NumpadDivide",label:"DF_HOTKEYS.NumpadDivide"},NumpadMultiply:{key:"NumpadMultiply",label:"DF_HOTKEYS.NumpadMultiply"},NumpadSubtract:{key:"NumpadSubtract",label:"DF_HOTKEYS.NumpadSubtract"},NumpadAdd:{key:"NumpadAdd",label:"DF_HOTKEYS.NumpadAdd"},NumpadEnter:{key:"NumpadEnter",label:"DF_HOTKEYS.NumpadEnter"},Backspace:{key:"Backspace",label:"DF_HOTKEYS.Backspace"},Enter:{key:"Enter",label:"DF_HOTKEYS.Enter"},Insert:{key:"Insert",label:"DF_HOTKEYS.Insert"},Delete:{key:"Delete",label:"DF_HOTKEYS.Delete"},PageUp:{key:"PageUp",label:"DF_HOTKEYS.PageUp"},PageDown:{key:"PageDown",label:"DF_HOTKEYS.PageDown"},Home:{key:"Home",label:"DF_HOTKEYS.Home"},End:{key:"End",label:"DF_HOTKEYS.End"},BracketLeft:{key:"BracketLeft",label:"DF_HOTKEYS.BracketLeft"},BracketRight:{key:"BracketRight",label:"DF_HOTKEYS.BracketRight"},Slash:{key:"Slash",label:"DF_HOTKEYS.Slash"},Backslash:{key:"Backslash",label:"DF_HOTKEYS.Backslash"},Minus:{key:"Minus",label:"DF_HOTKEYS.Minus"},Equal:{key:"Equal",label:"DF_HOTKEYS.Equal"},Semicolon:{key:"Semicolon",label:"DF_HOTKEYS.Semicolon"},Quote:{key:"Quote",label:"DF_HOTKEYS.Quote"},Comma:{key:"Comma",label:"DF_HOTKEYS.Comma"},Period:{key:"Period",label:"DF_HOTKEYS.Period"},Backquote:{key:"Backquote",label:"DF_HOTKEYS.Backquote"}}}get(e){return this._data[e]}get keys(){return Object.values(this._data).map((e=>e.key))}get labels(){return Object.values(this._data).map((e=>e.label))}get entries(){return Object.values(this._data)}get KeyA(){return this._data.KeyA.key}get KeyB(){return this._data.KeyB.key}get KeyC(){return this._data.KeyC.key}get KeyD(){return this._data.KeyD.key}get KeyE(){return this._data.KeyE.key}get KeyF(){return this._data.KeyF.key}get KeyG(){return this._data.KeyG.key}get KeyH(){return this._data.KeyH.key}get KeyI(){return this._data.KeyI.key}get KeyJ(){return this._data.KeyJ.key}get KeyK(){return this._data.KeyK.key}get KeyL(){return this._data.KeyL.key}get KeyM(){return this._data.KeyM.key}get KeyN(){return this._data.KeyN.key}get KeyO(){return this._data.KeyO.key}get KeyP(){return this._data.KeyP.key}get KeyQ(){return this._data.KeyQ.key}get KeyR(){return this._data.KeyR.key}get KeyS(){return this._data.KeyS.key}get KeyT(){return this._data.KeyT.key}get KeyU(){return this._data.KeyU.key}get KeyV(){return this._data.KeyV.key}get KeyW(){return this._data.KeyW.key}get KeyX(){return this._data.KeyX.key}get KeyY(){return this._data.KeyY.key}get KeyZ(){return this._data.KeyZ.key}get Digit1(){return this._data.Digit1.key}get Digit2(){return this._data.Digit2.key}get Digit3(){return this._data.Digit3.key}get Digit4(){return this._data.Digit4.key}get Digit5(){return this._data.Digit5.key}get Digit6(){return this._data.Digit6.key}get Digit7(){return this._data.Digit7.key}get Digit8(){return this._data.Digit8.key}get Digit9(){return this._data.Digit9.key}get Digit0(){return this._data.Digit0.key}get Numpad1(){return this._data.Numpad1.key}get Numpad2(){return this._data.Numpad2.key}get Numpad3(){return this._data.Numpad3.key}get Numpad4(){return this._data.Numpad4.key}get Numpad5(){return this._data.Numpad5.key}get Numpad6(){return this._data.Numpad6.key}get Numpad7(){return this._data.Numpad7.key}get Numpad8(){return this._data.Numpad8.key}get Numpad9(){return this._data.Numpad9.key}get Numpad0(){return this._data.Numpad0.key}get NumpadDecimal(){return this._data.NumpadDecimal.key}get NumpadDivide(){return this._data.NumpadDivide.key}get NumpadMultiply(){return this._data.NumpadMultiply.key}get NumpadSubtract(){return this._data.NumpadSubtract.key}get NumpadAdd(){return this._data.NumpadAdd.key}get NumpadEnter(){return this._data.NumpadEnter.key}get Backspace(){return this._data.Backspace.key}get Enter(){return this._data.Enter.key}get Insert(){return this._data.Insert.key}get Delete(){return this._data.Delete.key}get PageUp(){return this._data.PageUp.key}get PageDown(){return this._data.PageDown.key}get Home(){return this._data.Home.key}get End(){return this._data.End.key}get BracketLeft(){return this._data.BracketLeft.key}get BracketRight(){return this._data.BracketRight.key}get Slash(){return this._data.Slash.key}get Backslash(){return this._data.Backslash.key}get Minus(){return this._data.Minus.key}get Equal(){return this._data.Equal.key}get Semicolon(){return this._data.Semicolon.key}get Quote(){return this._data.Quote.key}get Comma(){return this._data.Comma.key}get Period(){return this._data.Period.key}get Backquote(){return this._data.Backquote.key}},Hooks.once("init",(function(){window.Hotkeys?i=window.Hotkeys:(e.init("lib-df-hotkeys"),Object.defineProperty(a,"isShim",{value:!0,writable:!1,configurable:!1}),i=a,i._init())}));let n=!1;const r={x:0,y:0};let s=!1;function o(e,t,a){const i=e._object;i.data.x=t-r.x,i.data.y=a-r.y,e.update(i.data)}Hooks.once("init",(function(){console.log("=============================Live Animate============================")})),Hooks.once("init",(()=>{!function(e){e.prototype.animateMovement=function(){const t=e.prototype.animateMovement;return function(e){return this.document.getFlag("world","isLiveAnimate")?(this.data.x=e.B.x,this.data.y=e.B.y,this.data.update({x:e.B.x,y:e.B.y}),void this.updateSource()):(console.log("normal ray"),t.apply(this,arguments))}}();const t=e.prototype._onDragLeftStart;e.prototype._onDragLeftStart=async function(e){var a;if(s&&(null===(a=game.user)||void 0===a?void 0:a.isGM)){r.x=this.center.x-this.x,r.y=this.center.y-this.y,n=!!s;const t=this.document,a=e.data.destination;await t.setFlag("world","isLiveAnimate",!0),t.update(this.data),o(t,a.x,a.y)}else await this.document.setFlag("world","isLiveAnimate",!1),t.call(this,e)};const a=e.prototype._onDragLeftMove;e.prototype._onDragLeftMove=async function(e){if(n){if(this instanceof Token){const t=e.data.destination;o(this.document,t.x,t.y)}}else a.call(this,e)};const i=e.prototype._onDragLeftDrop;e.prototype._onDragLeftDrop=function(e){n?(n=!1,this.document.setFlag("world","isLiveAnimate",!0)):i.call(this,e)}}(Token)})),Hooks.once("ready",(()=>{var e,t,a;if(!(null===(e=game.modules.get("lib-df-hotkeys"))||void 0===e?void 0:e.active))return console.error("Missing lib-df-hotkeys module dependency"),void((null===(t=game.user)||void 0===t?void 0:t.isGM)&&(null===(a=ui.notifications)||void 0===a||a.error("'My Module' requires the 'Library: DF Hotkeys' module. Please install and activate this dependency.")));i.registerGroup({name:"liveanimate.animate",label:"Live Animate",description:"Hot keys for the live animate module"}),i.registerShortcut({name:"liveanimate.animate",label:"Animate",group:"liveanimate.animate",default:{key:i.keys.KeyE,alt:!1,ctrl:!1,shift:!1},onKeyDown:()=>{s=!0},onKeyUp:()=>{s=!1}})}))})();